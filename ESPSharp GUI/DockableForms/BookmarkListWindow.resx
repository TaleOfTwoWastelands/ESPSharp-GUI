<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xjYkv9NpR8zcq1HP3sxRz97MR8zcqyS/02kArsY2ALTSEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAsswKAK/PIBy80lAuwdWZMcLYvjHC2L4uwdWZHLzSUACvzyAAsswKAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAACZzAUAr88QEbnTOxi804Yau9GtGrvRrRi804YRudM7AK/PEACZzAUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAP//AQCZzAUFt88rCLbMdAi1y5kItcuZCLbMdAW3zysAmcwFAP//AQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACvxyAAssphALLKggCyyoIAssphAK/HIAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALDEGgCxy08AsspqALLKagCx
        y08AsMQaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsccXALLLRgCz
        y14As8teALLLRgCxxxcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/P//P/x//j/+H/h//g/wf/4DwH//AYD//wAA//8AAP//AAD//wAA//+AAf//gAH//4AB//8A
        AP/+AAB/+AAAH/AAAA/AAAADAAAAAAAAAAD/8A////AP///4H///+B////gf///8P////D////w////+
        f////n////////////8oAAAAIAAAAEAAAAABAAgAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wA/
        P/8AfwD/AD9//wBVVf8AXX//AH9//wCqVf8Aa4b/AHOL/wB0iv8AcY3/AHeN/wB5jf8AbJH/AHaS/wB8
        k/8Afpj/AAD//wCAlv8AgZj/AYWb/wGDnf8AhZz/AYmf/wSLn/8AhKD/Aoyi/wCNqf8Aja//BpGm/wCQ
        qv8Gkqj/AJSp/wCRrf8Ala3/Bpet/wCYrv8AnKz/Cpmu/wCWsP8Akbb/AJmy/websf8AnbH/AJm1/wCd
        tv8Jm7D/Dpux/w6csP8KnrT/AJa5/wCeuP8An7//EJ61/wChtv8KoLL/DaG2/wChuf8Forj/AKS4/wak
        uv8Aor3/AKW//wWmvP8Morj/C6a6/w2luv8Jpbz/DKe9/wOov/8Lqb//Dam+/xKnvP8Qq77/AJnM/wCp
        xv8PrsL/AKrJ/wCuyv8Rq8D/Eq3C/xWuw/8Ur8X/GavB/xqtwf8Ascn/ALPN/wSzzP8GtMz/CbXN/xOy
        xf8esMP/G7DG/x2yxf8Ut8//E7rN/xq7zf8VuND/Fb7Q/xm/0f8dvNL/IbHG/yWxxf8ltcf/IbLI/yWz
        yP8itMn/KbbJ/yS/zf8suMr/KL3J/yq4zP8uucz/Ob3O/yS70P8nvNH/LL3Q/zO/0v80vdH/PL/R/xfD
        1v8bxNf/G8zf/zDBzf82wc3/PcDP/zvGz/8jxtb/KsHV/y/B1/8jzN3/LM7d/z7E1f8zzNP/MMnX/z3O
        0v8v0Nv/LtXf/zbR1P8/0NP/ONHV/zzS1v8z0tr/NtPa/zLU2v801Nv/Mdbf/zTV3P850t7/Hc7g/x7R
        4v8f2er/Ic/h/yXS4v8n2Ob/Ltji/yrZ5v8t2ub/Jtvr/yvb6P8r3Oj/Lt7r/yvf7f8w2OL/MN/r/zjc
        6P8x4e3/JuPz/yrh8P8v6Pf/NeTx/0PD0v9BxdL/ScbV/0HL0f9FzdP/QM7X/0fP1v9Jy9P/TM7V/0rG
        2P9Hy9z/TsjZ/1DL2v9Rzt//Vc/c/1jN3f9A0db/StHZ/0zS2f9K1Nr/UdHa/1LT3f9W09z/UNXe/17U
        3v9T1uH/VtXg/1rQ4P9d0eH/W9fh/1/Y4f9d2eX/Xtno/2LS4f9g1eP/ZdXj/2Tb6f9m3Or/atrr/2/c
        6v9p3e3/bd7t/3LZ4/912uX/cdzp/3He7f913u3/eN7r/3ne7P9o3vD/cODt/3Xg7/954Ov/eODt/3zi
        7v9y4vD/cuTz/3Lj9P964fD/eeXx/37m8v975/T/fOf0/4Hj7/+E4+3/g+Tv/4nk7v+M5u7/gOPw/4Hk
        8P+A6fb/her3/4Lr+P+C7Pj/iu75/5Pq8v+U6fT/le/4/4/w+v+Y9P7/ovH6/6P2/v8AAAD/AAAA/wAA
        AAAAEBATEA8OAAAAAAAAAAAAAA4MEBAQEAAAAAAAAAAAAAAQEBAUEw0JBQAAAAAAAAUKEBMUExAPAAAA
        AAAAAAAAAA8QFBUXEAkKBAAAAAAECgoNFxcTDREAAAAAAAAAAAAADQ0XGyAeGRMMDg4ODgoTGB4eGxcQ
        DQAAAAAAAAAAAAAIDBs5SFFDGw0QEBAQEBhBTUhBGwoIAAAAAAAAAAAAAAUJG0ldemQ2HhkUExseOXl5
        W0QeCQUAAAAAAAAAAAAAAw8bJ1KZo5lhMRgZL2B7mHtNJBsPAwAAAAAAAAAAAAABDhoeQ5qqqZlbOTlb
        l6ipmkUbGg4BAAAAAAAAAAAAAAAGERY2hKejnZqEmZman6l7OBURBgAAAAAAAAAAAAAAAAANETCEpp6h
        paenpaKdnYAvEQ0AAAAAAAAAAAAAAAAAAAsUMXyVk5ykpKSknIqJbScTCwAAAAAAAAAAAAAAAAAAFxo5
        fbGSkZGQkZSUkIZvOBsXAAAAAAAAAAAAAAAAAAAdHEmsvY6QjYuIjY2NiHxCHyMAAAAAAAAAAAAAABwp
        JTtJcMLJv7yOjoyIiIiyf15FNyYuHAAAAAAAAAACNCoqRXK72d7LxsO9srCvr7SzcmZCLi0uAgAAAAAp
        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
        AAAAAAAAAAAAAAAAAAAAAAAAALPLXgCzy14AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7/cAAOPH
        AADxjwAA8A8AAPAPAADwDwAA8A8AAOAHAACAAQAAAAAAAPw/AAD8PwAA/n8AAP5/AAD+fwAA//8AACgA
        AAAQAAAAIAAAAAEACAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAFaQD/Bn4v/wN1M/8Af5X/ApON/wSd
        jf8AgJb/DYaQ/wCCmP8AhZz/Aoed/wCIn/8LkZz/AYui/wKLov8FjKH/AI6l/wGTqv8CmK//CZmv/wuZ
        r/8JmrD/DZux/wGiuv8Do7r/Aaa+/wimvP8Lp73/AafA/wGqwv8Brsb/Ea7C/xOuwv8Bssv/AbPM/xyz
        yf8ds8n/FbrN/xi7zv8ltsr/MLnL/yK+1P8vx9L/P8vT/z3K1f880dT/PdLV/zLW3v8g1OX/J9Xl/yrY
        5v8j3e7/Kdro/y3b6f8r3+//N9vo/zDc6f9AwdH/SMXW/03H1/9HzNT/TNDY/1TQ2P9V0tz/XdDf/1XW
        4P9f1eP/YNXj/2Hb6f9n3e7/d+Dt/3Ti8f914/H/e+Ty/3zk8f995fL/gufz/4Pn8/+F6PP/lery/5Xr
        9f+W7PX/l+72/5Pt+f+V7vn/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AwMGAwYGBggIBgMGAwYDAwYG
        BgMPBgYICAMGDwMGBgYGCAYIICYLCAgLJR8IBggICQkJCRY2MRQTMDMVCQkJCQ0LCwsONzQ4NTQyDQsL
        CwsYGBIRECwvLy8vKhAREhgYGBgYGBg/Li0tLisYGBgYGBgYGBtASkRBPTw+ORoYGBgYGChPUk5NRUVL
        SUxGJxgYFxcXFxcXO0hHOhcXFxcXFxcXFxcXGSRUUyMZFxcXFxcXFxkZGR0dUVAdHRkZGRcXFxkXFx4e
        HkNCHh4eFxcZGRkXFx4hISEpKSEhIR4XFxcXFxwiIiIiIiIiIiIiBBcXFwcMIiIiIiIiIiIiAgABBe/3
        AADjxwAA8Y8AAPAPAADwDwAA8A8AAPAPAADgBwAAgAEAAAAAAAD8PwAA/D8AAP5/AAD+fwAA/n8AAP//
        AAA=
</value>
  </data>
</root>